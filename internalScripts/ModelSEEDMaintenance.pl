use strict;
use warnings;
use DBI;
use DateTime;

$|=1;

my $badgenomelist = [qw(
10065764.3
1037409.13
1069642.5
10699.18
10699.19
1123719.4
1150864.4
123841.3
1255043.6
1280.2149
1280.2857
1280.2893
1280.2895
1294261.10
1298881.3
1306400.6
1306400.7
1352.433
1352.434
1355477.5
1355477.6
1423.147
1496.672
1496.725
1496.734
1511745.5
1631346.3
167559.3
171194.8
1717.29
1883.101
194963.8
210.1580
216591.35
216591.36
216591.37
225849.9
234826.16
2754.14
2754.15
2754.16
293089.3
29497.7
32022.107
326423.38
329553.4
336810.10
336830.3
336830.4
336831.10
336831.9
343509.23
358.48
358.49
386891.9
421.3
421.4
444461.6
452863.25
458032.3
459495.4
480119.10
528352.8
537011.13
54306.3
553.23
55555.5
590062.4
595537.10
623.110
634956.11
634956.12
634956.14
634956.15
637987.5
642.164
642.165
642.168
644283.8
648.24
648999.7
662.461
662.462
662.463
662.464
663.62
665135.5
665135.6
666.1544
666.1854
6666666.100351
6666666.100466
6666666.100850
6666666.100851
6666666.100852
6666666.100853
6666666.100854
6666666.100905
6666666.100990
6666666.100991
6666666.100992
6666666.100993
6666666.100994
6666666.101003
6666666.101123
6666666.101128
6666666.101270
6666666.102231
6666666.102291
6666666.102297
6666666.102320
6666666.102466
6666666.102467
6666666.102474
6666666.103158
6666666.103161
6666666.103364
6666666.104084
6666666.104243
6666666.104515
6666666.104920
6666666.105010
6666666.105137
6666666.105149
6666666.105157
6666666.105259
6666666.105283
6666666.105435
6666666.105464
6666666.105655
6666666.105656
6666666.105657
6666666.105681
6666666.105856
6666666.105992
6666666.106053
6666666.107253
6666666.107264
6666666.107268
6666666.107270
6666666.107271
6666666.107272
6666666.107273
6666666.107274
6666666.107421
6666666.107426
6666666.107427
6666666.107432
6666666.107437
6666666.107439
6666666.107441
6666666.107442
6666666.107443
6666666.108139
6666666.108140
6666666.108142
6666666.108184
6666666.108187
6666666.108230
6666666.108231
6666666.108235
6666666.108374
6666666.108492
6666666.108594
6666666.108656
6666666.108657
6666666.108658
6666666.108687
6666666.108688
6666666.108691
6666666.108695
6666666.108737
6666666.108957
6666666.108963
6666666.108964
6666666.108965
6666666.109095
6666666.109096
6666666.109104
6666666.109110
6666666.109677
6666666.109697
6666666.109720
6666666.109835
6666666.109849
6666666.114928
6666666.114930
6666666.114933
6666666.114962
6666666.114963
6666666.115484
6666666.116488
6666666.116835
6666666.118186
6666666.118343
6666666.118344
6666666.118346
6666666.118859
6666666.118897
6666666.118898
6666666.118899
6666666.118900
6666666.119173
6666666.119654
6666666.119878
6666666.120777
6666666.120780
6666666.121069
6666666.121070
6666666.122256
6666666.122258
6666666.122300
6666666.122381
6666666.122382
6666666.122383
6666666.122384
6666666.122385
6666666.122386
6666666.122387
6666666.122388
6666666.122389
6666666.122390
6666666.122391
6666666.122392
6666666.122393
6666666.122394
6666666.122395
6666666.122485
6666666.122486
6666666.122667
6666666.122668
6666666.122670
6666666.122671
6666666.122672
6666666.122673
6666666.122719
6666666.122755
6666666.123209
6666666.123240
6666666.123459
6666666.123546
6666666.123684
6666666.125799
6666666.126262
6666666.126263
6666666.126264
6666666.126265
6666666.126266
6666666.126267
6666666.126268
6666666.126269
6666666.126559
6666666.126675
6666666.127054
6666666.127919
6666666.127938
6666666.127989
6666666.128350
6666666.128362
6666666.128567
6666666.128640
6666666.128734
6666666.128805
6666666.128929
6666666.128932
6666666.128933
6666666.128950
6666666.128951
6666666.128952
6666666.128957
6666666.128958
6666666.129051
6666666.129395
6666666.129397
6666666.129533
6666666.129776
6666666.130001
6666666.131831
6666666.131833
6666666.131835
6666666.131838
6666666.131839
6666666.131840
6666666.131841
6666666.131842
6666666.131843
6666666.131844
6666666.131845
6666666.131846
6666666.131847
6666666.131848
6666666.131849
6666666.131850
6666666.131851
6666666.131852
6666666.131854
6666666.99127
6666666.99989
694275.3
702114.10
702114.4
80869.5
830323356.4
838.10
838.11
838.12
838.15
838.7
838.8
838.9
844780757.3
857335.3
857335.4
984195.5
)];
my $badhash = {};
for (my $i=0; $i < @{$badgenomelist}; $i++) {
	$badhash->{$badgenomelist->[$i]} = 1;
}

#Printing PID file
if (-e "/vol/model-prod/kbase/deploy/pids/mss-maint-pid") {
	unlink("/vol/model-prod/kbase/deploy/pids/mss-maint-pid");
}
open(PID, "> /vol/model-prod/kbase/deploy/pids/mss-maint-pid") || die "could not open PID file!"; 
print PID "$$\n"; 
close(PID);
#Running maintenance loop
while (1) {
	print STDERR "New loop - ".DateTime->now()->datetime()."\n";
	my $db = DBI->connect("DBI:mysql:ModelDB:bio-app-authdb.mcs.anl.gov:3306","webappuser");
	if (defined($db)) {
		my $models = $db->selectall_arrayref("SELECT * FROM ModelDB.MODEL", { Slice => {
			_id => 1,
			source => 1,
			status => 1,
			genome => 1,
			id => 1,
			owner => 1,
			name => 1,
			biomassReaction => 1,
			autoCompleteReactions => 1,
			autoCompleteMedia => 1,
			reactions => 1,
			associatedGenes => 1,
			gapFillReactions => 1,
			modificationDate => 1
		} });
		$db->disconnect;
		#Printing current model status
		open(STATUS, "> /homes/chenry/public_html/ModelStatus.html") || die "could not open model status file!";
		print STATUS '<!doctype HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">'."\n";
		print STATUS '<head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>ModelSEED Status</title>'."\n";
		my $datetime = DateTime->now()->datetime();
		print STATUS "</head><body><p>Date of last update: ".$datetime."</p><br><p>Total models: ".@{$models}."</p><br><table>\n";
		print STATUS "<tr><th>ID</th><th>Genome</th><th>Owner</th><th>Status</th><th>Reactions</th><th>Biomass</th><th>Gapfill reactions</th><th>Mod date</th></tr>\n";
		my $mdllist = [];
		for (my $i=53519; $i < @{$models}; $i++) {
			if (!defined($badhash->{$models->[$i]->{genome}}) && ($models->[$i]->{status} == -1 ||  $models->[$i]->{status} == -2)) {
				push(@{$mdllist},$i);
			}
			$datetime = DateTime->from_epoch(epoch => $models->[$i]->{modificationDate})->datetime();
			print STATUS "<tr><td>".$models->[$i]->{id}."</td><td>".$models->[$i]->{genome}."</td><td>".$models->[$i]->{owner}."</td><td>".$models->[$i]->{status}."</td><td>".$models->[$i]->{reactions}."</td><td>".$models->[$i]->{biomassReaction}."</td><td>".$models->[$i]->{gapFillReactions}."</td><td>".$datetime."</td></tr>\n"; 
		}
		print STATUS "</table></body></html>\n";
		close(STATUS);
		#Calling model algorithm
		for (my $i=0; $i < @{$mdllist}; $i++) {
			my $index = $mdllist->[$i];
			print STDERR "Processing:".$models->[$index]->{id}."\t".$models->[$index]->{genome}."\t".$models->[$index]->{owner}."\t".DateTime->now()->datetime()."\n";
			my $userid;
			if ($models->[$index]->{id} =~ m/Seed\d+\.\d+\.(\d+)/) {
				$userid = $1;
			}
			system("perl /vol/model-prod/kbase/MSSeedSupportServer/internalScripts/BuildModelSEEDModelV2.pl ".$models->[$index]->{genome}." ".$models->[$index]->{owner}." ".$userid." /vol/model-prod/kbase/deploy/configs/MSMaintConfig.ini > /vol/model-prod/kbase/deploy/msjobs/".$models->[$index]->{genome}.".out");
		}
	}
	sleep(3600);
}

1;
